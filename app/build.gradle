import java.util.regex.Matcher
import java.util.regex.Pattern

apply plugin: 'com.android.application'
apply plugin: 'com.google.gms.google-services'
apply plugin: 'kotlin-android'
apply plugin: 'kotlin-kapt'
//apply plugin: 'com.google.firebase.firebase-perf'
apply plugin: 'com.google.firebase.crashlytics'

repositories {
    mavenCentral()
    maven { url "https://mint.splunk.com/gradle/" }
    google()
}

repositories {
    jcenter()
    maven { url "https://jitpack.io" }
}

/*repositories {
    maven {
        url 'https://customers.pspdfkit.com/maven/'
    }
}*/

android {
    compileSdkVersion 30
  //  buildToolsVersion "30.0.3"

    defaultConfig {
        applicationId "com.app.skillsontario"
        minSdkVersion 21
        multiDexEnabled true
        targetSdkVersion 30
        versionCode 10
        versionName "1.0.10"
        vectorDrawables.useSupportLibrary = true
        flavorDimensions "default"
        testInstrumentationRunner "androidx.test.runner.AndroidJUnitRunner"

        ndk {
            //abiFilters "armeabi-v7a" //, "x86", "arm64-v8a"
            abiFilters 'armeabi-v7a', 'arm64-v8a', 'x86', 'x86_64'
        }
    }

    signingConfigs {
        config {
            keyAlias 'maxsold'
            keyPassword 'maxsold@12'
            storeFile file('../keystore.jks')
            storePassword 'maxsold@12'
        }
    }

    dataBinding {
        enabled = true
    }

    dexOptions {
        javaMaxHeapSize "6g"
    }

    buildTypes {
        release {
            minifyEnabled false
            proguardFiles getDefaultProguardFile('proguard-android-optimize.txt'), 'proguard-rules.pro'

            signingConfig signingConfigs.config

            applicationVariants.all { variant ->
                variant.outputs.each { output ->
                    def name = "skillsontario_" + getCurrentFlavor() + "_" + variant.buildType.name +
                            "_" + variant.mergedFlavor.versionName + "_" +
                            variant.mergedFlavor.versionCode + "_" +
                            getDate() + ".apk"
                    output.outputFileName = name
                }
            }
        }

    }
    compileOptions {
        sourceCompatibility JavaVersion.VERSION_1_8
        targetCompatibility JavaVersion.VERSION_1_8
    }

    productFlavors {

        development {
            //buildConfigField "String", "BASE_URL", '"http://ec2-13-234-249-108.ap-south-1.compute.amazonaws.com:3100/api/"' // old build
            //  buildConfigField "String", "BASE_URL", '"http://ec2-3-99-57-179.ca-central-1.compute.amazonaws.com:3100/api/"'
             //buildConfigField "String", "BASE_URL", '"https://apiadskills.appstudiointernal.ca/api/"' // dev
            // buildConfigField "String", "BASE_URL", '"https://devapi.appskillsontario.com/api/"' // testing
            buildConfigField "String", "BASE_URL", '"https://api.appskillsontario.com/api/"'  // producation
        }


        production {
            buildConfigField "String", "BASE_URL", '"https://api.appskillsontario.com/api/"'
        }


    }

    bundle {
        language {
            // Specifies that the app bundle should not support
            // configuration APKs for language resources. These
            // resources are instead packaged with each base and
            // dynamic feature APK.
            enableSplit = false
        }
        density {
            // This property is set to true by default.
            enableSplit = true
        }
        abi {
            // This property is set to true by default.
            enableSplit = true
        }
    }

    lintOptions {
        checkReleaseBuilds false
        abortOnError false
    }
}

dependencies {

    implementation fileTree(dir: 'libs', include: ['*.jar'])
    implementation 'androidx.appcompat:appcompat:1.3.0'
    implementation 'androidx.constraintlayout:constraintlayout:2.0.4'
    implementation 'androidx.legacy:legacy-support-v4:1.0.0'
    implementation 'androidx.lifecycle:lifecycle-extensions:2.2.0'
    implementation 'androidx.navigation:navigation-fragment-ktx:2.3.5'
    implementation 'androidx.navigation:navigation-ui-ktx:2.3.5'
    implementation 'com.google.android.material:material:1.3.0'
    testImplementation 'junit:junit:4.13.2'
    androidTestImplementation 'androidx.test:runner:1.3.0'
    androidTestImplementation 'androidx.test.espresso:espresso-core:3.3.0'
    implementation "androidx.cardview:cardview:1.0.0"

    implementation "androidx.recyclerview:recyclerview:1.2.1"
    implementation 'com.android.support:multidex:1.0.3'
    //Api connection
    implementation 'com.squareup.retrofit2:retrofit:2.9.0'
    implementation 'com.squareup.retrofit2:converter-gson:2.9.0'
    implementation 'com.squareup.okhttp3:logging-interceptor:4.9.0'
    implementation 'com.google.firebase:firebase-messaging:23.0.0'

    //image loading
    implementation 'com.github.bumptech.glide:glide:4.11.0'
    kapt 'com.github.bumptech.glide:compiler:4.11.0'
    implementation 'me.grantland:autofittextview:0.2.1'

    implementation 'io.branch.sdk.android:library:5.0.10'

    implementation 'com.google.firebase:firebase-auth:21.0.1'

    implementation 'com.google.firebase:firebase-messaging-ktx:23.0.0'
    testImplementation 'junit:junit:4.+'
    dependencies {
        implementation 'com.google.android.gms:play-services-auth:19.2.0'
    }

    //Image Picker and cropper
    implementation 'com.zhihu.android:matisse:0.5.3-beta3'

   implementation 'com.github.adroitandroid:ChipCloud:2.2.1'
    implementation "me.leolin:ShortcutBadger:1.1.22@aar"
    implementation 'com.github.weidongjian:androidWheelView:1.0.0'
    //page indicators
    implementation 'com.romandanylyk:pageindicatorview:1.0.3'
    implementation 'com.github.pwittchen:infinitescroll:v0.0.3'

    //Dimensions
    implementation 'com.intuit.ssp:ssp-android:1.0.6'
    implementation 'com.intuit.sdp:sdp-android:1.0.6'

    //permissions
    implementation 'com.karumi:dexter:6.2.3'
    implementation "com.github.skydoves:balloon:1.3.4"

    //bottombar
    implementation 'com.gauravk.bubblenavigation:bubblenavigation:1.0.7'
    implementation 'com.github.HamidrezaAmz:MagicalExoPlayer:2.0.7'

    implementation project(':expandable-recyclerview-adapter')
    implementation project(':tagadapter')
    implementation 'com.github.pwittchen:infinitescroll:0.0.1'
    implementation 'com.squareup.picasso:picasso:2.5.2'

    implementation platform('com.google.firebase:firebase-bom:29.1.0')
    implementation 'com.google.firebase:firebase-analytics'
    implementation 'com.google.firebase:firebase-analytics-ktx'
    implementation 'com.google.firebase:firebase-crashlytics'
    implementation 'com.google.firebase:firebase-perf'






}

apply plugin: 'com.google.gms.google-services'
apply plugin: 'kotlin-android-extensions'

def getCurrentFlavor() {
    Gradle gradle = getGradle()
    String tskReqStr = gradle.getStartParameter().getTaskRequests().toString()
    Pattern pattern
    pattern = Pattern.compile("assemble(\\w+)(Release|Debug)")
    Matcher matcher = pattern.matcher(tskReqStr)
    if (matcher.find()) {
        return matcher.group(1).toLowerCase()
    } else {
        println "NO MATCH FOUND"
        return ""
    }
}

static def getDate() {
    def date = new Date()
    def formattedDate = date.format('yyyy-MM-dd')
    return formattedDate
}